<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACDIAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAIEpJ
        REFUeNrtnelzG0eap39ZOAkSBHgf4iGSokRJ1GUdlrvVvmLcbs+4d2LGPbExMR9m99t+mT+rvdu9MZfd
        dnvWh2S5zUOyKFKUeN83CZDEfRYq90OBlGSJEgECZBH4PRFUuFsiWFXM98nMN9/KFHX/4pMghBQlCh8B
        IRQAIYQCIIRQAIQQCoAQQgEQQigAQggFQAgpGMz7/YeKAIQonBvXNAlNGq8GShECilJAD5ocOlIC2j6b
        9r4EoAjg1hkrGtwmFELZoNQkvv7xMWYWPRAGCjapSVzsasYv3+gsiOdMDh8BYNWXwl/GE/uSwL4EIATQ
        4DbhVJ1p32YxMpqUsGp+JANrgGKgWZCmoUypQEedGdKAoxNifHb6MyEA5EoASH+WlsHQwtAC0AAgPacx
        0rxGKJAQ0KQ+jCMkGzJpOkwCElLEUACEUACEEAqAEEIBEEIoAEIIBUAIoQAIIRQAIYQCIIRQAIQQCoAQ
        QgEQQigAQggFQAihAAghFAAhhAIghFAAhBAKgBBCARBCKABCCAVACKEACCEUACGEAiCEUACEEAqAEEIB
        EEIoAEIIBUAIoQAIIRQAIYQCIIRQAIQQCoAQQgEQQigAQigAPgJCKABCCAVACKEACCEUACGEAiCEUACE
        EAqAEEIBEEIoAEIIBUAIoQAIIRQAIYQCIIRQAIQQCoAQQgEQQigAQggFQAihAAghFAAhhAIghFAAhBAK
        gBBCARBCKABCCAVACKEACCEUACGEAiCEUACEEAqAEEIBEEIoAEIIBUAIoQAIIRQAIRQAIYQCIIRQAIQQ
        CoAQQgEQQigAQggFQAihAAghFAAhhAIghFAAhBAKgBBCAZBjhxCCD4ECIMWKLxBGPJEENZBfBAApJQVA
        DNIghUAoHMOnn/Xidt8ojNM0C/NZB8JRfNfzBOFIHEYYdFEAxY6U6BucwuTcGnoGJjG7uAFFKaxxQCql
        IZXSjnSaI4RALJ7Al7eH8OcfhvFkcskQ0y4KoIhRhMDS2hZ6BiYBAKFQDN/0PEEkmjBE75STe1QERqaW
        8dk3DxAKR48k6IQAkmoKX//lMe4Nz0JTNfQ+nEIwFDtyCVAARUwiqeJ23yh8/ojeShWB8Zk1/DQ8AxRI
        NiCZTGHgyRx+uD+OP3zRj83tIJRDDjpNk7h7bxTf3x/X5/+KwOLqFh6NLxy5aCmAIkVRBIbHFzE8sQQ8
        M+TXNA3f3xvH2obv0AMl5/coBFY9PkwvbABC4PHEEn7/WQ+W1rYO9d7uDU3j6x+fIKWmnnvOfYPTCASj
        RzoKoACKECEEtv1h3O4fRTKp/vwvsbkdxO2+ESSfabDHEQlgeHwRoXBMH+EIgdlFD37/WQ+m5tfyHnhC
        CAyPLeBPt4cQjyfxXHcvBJbWtjE0tnCkYy0KoAiRUqLnwSSW1rbx0jGoEBgcW8DjicVjmxAUQiAQjODx
        xPIL97a64cOnn/dheDx/wacIgYnZVfz7NwMIR2Ivfc4yPQrwBSNHNgqgAIoMRRGYW/Kgb3AaeMV6dCKh
        4rveUWz7w8eySEgIYHJuDeub/heDTwhs+UL445f3cG9oGlLKnIpAEQLzK17823/9BJ8/jD0n+kJgZX0b
        gyPzRzYKoACKCAEgFkvidt8IgqEoXpmBEnqi6sefJgxVuLJfEgkVg6ML0FRtz/sLhWP4968f4O69Mag5
        WiZUhMCa149//eo+1j1+vC7LJ6VE/9A0tgNHI1oKoJgEIAQGR+cxMr36XOLvFc0TfUPTmFk4XrUBiqL3
        rDOLntdKLhZP4ovvh/D/fhjWKyEPEIRCCGz5w/i3/7qPhZXN/T1jIbDq8WPgydzRPCuGRfEEv3c7iDv9
        Y89lo1/XOEOhGL7tPV61AVKTeDS+iEg0/vrVTCGgJjV82zuCz799iEg0npUEhBAIR+L47NsBTMyuIaOH
        JSXuPZrBli906KMACqBI0DQNP/w0jjWPL7PGqQiMz67hwfAsjkNtgBACvmAETyaXM/gmQJMSPw5M4l+/
        uo9AMJLRMqEQek3FV3eHMDi6gIxNKQTWvYEjGQVQAEWAoghMz6/j/qPsglhLafj+/hjWPD7DJwSFACZm
        V+HZCiKbIcvAkzn84Yt+eDIoGEppEnf6RtDzcCr7C5cS9x/NYHM7eKjPmAIocIQAItE4vusdQSQSz64T
        FwLerSDu9I9CNXhtQDyeTv6ltKwf2MjUMv73571Y2dh+rQQEgHuD0/i2dxRa6gDJUiGwsRnET8OzwCG+
        kkUBFL4C8GB4FhNz6/tM/O3dQB+OLGBkatmwCUFFEVha28TckvfA9zqzsIFPP+/F/LJ3TwkoQuDJ1DK+
        /H4IiUQyBzMkiZ8ez8KzeXijAAqgkENfCKx7/bh7fxyaph348xKJJL7rHYEvEDHkVEDTJB6NLSIaTeTi
        4WFpdQufft6LyZdUDSpCYGHFi//8ZuBppWEOfqZ3K4j7wzOvrNGgAMi+SKVSuHtvLOv58Msa6PzKJnoG
        jFcbsFPePDK9krtcZVqg/+dP/RibXtmVgL7cF8J/fD0AjzeAXC+PPHg8h/XNwKFIlgIoUBRFYHxmNZ1Z
        zmFDkhK9D6cxt+Qx1FRACGB8ZgXe7WBuAzL9bsQfv+zHyOQSFCEQTyTx5Z0hzCxuHGyqscfP2/KFdisU
        KQCSRRsSCIZi+K53BLFYMrerd0IgGIzi294RRGPGqQ2IxZIYHF2ETOUhaNKji//75/sYmVpG78AkBkbm
        kc+bHxiZP5RVFwqgIJG4NzSNmSVP7nsoAFAExqZXMPB4DkaoDVAUgcXVTcyvePNzv2kJ+AJh/OGLfnzT
        M5L9KsN+f5Y/jHtDM3kfBVAABYYiBJbXt/GXBxOQWv4aTyql4c69MWx4/UeeENQ0iaGxBcRjyfz+ICHg
        D0YQjsRxGEOfhyPzWFnfzuveBRRAgZFQVdzp09/iy7iRZtLbCAHPZgB3+keRSh1dbYBIz5lHp1cPZzAi
        xKH9HH8wgv6haaS0/I02KIACQlEERiaX8Wh8MePgN5sUVFU4M26kAyPzGJ1aObKEoBDA6PQKNn0hFMxG
        hs8wNLqA5TyOAiiAAkEIAX8ggu/6RpFIqJl9sybR3lyDf/joOlzOkoxGAvFYEt/2jhzZ1lbRWAJDYwuA
        VoAbmguBQCiK/sGpvI0CKIACQUqJnoeT+muoGQaixWrGL97oRFdHI25e6sj4ZaG5ZS96BiYPvTZAUQTm
        l71YWNnKX/LPAAyNLWJxdTMvoywKoABQhMDiyiZ6H05lXkGmSZxpq0dXRyOkBG5eOYWm+orMPmdXPt5D
        nQqkUhqGxhaQiCdRsKRfye57OAVVzf0ogAIoAOJJFbf7RhAIRDPu/e0lVty6dhp2mwVSSlS4SvHum2dh
        NpsyaqSBQFSvO4gnDylHphfojM2sFcoO5q98vsMTS3kRLAVwzFEUfefZx5PLmQ+DNYnuzhPoaKmDlp5D
        a5rEhdPN6O48kdm8WhF4MrWi7293CLkAIYCRqZXsVjuOnQCAcDiO3odTOX8bkwI4zu1CCGz7wrjTP5Z5
        w5ASZWV2/PLqaVgsz/f2NpsZ7948i/IME4IpNYXb/aPwbOW3jn3nFedHY4uFmfzb46afTC5jbim3owAK
        4BgjpUTPwCu2934NV861oqWxarf330HTJFoaq/HWlVOZfa4QWPf4cffeOFJ5rJQTQmBuyYvFtcJO/j1/
        00AkEkfvw0kkk7kbBVAAxxQ9A+5B39A0Mt5AIj3Xf+vKKSiKsmeQvXWlE80NlRkmFgXuP57FxOxq3hKC
        qZSGwdEFJDNd7jz2EtCnWbk8wJUCOKbE4knc7htFMBjNqve/fqEN9TXuPZfupJRwuxx4/+ZZWCzmTOIf
        sWgC3/WOIBjO/eGXIl2BODG7WvjJvz2ebc/DqcxrPSiAwkERAo/GFjAytZL5EFhK1Ne4cfNKJ8wmBYqy
        95eAwMWuFlw515LZKEARmF7YQP9gFqOT18cAnkwuwxeIFn7yb49nOzq9gukcbdVuLoBHUlTsbEbx/U7i
        L4sgqHCVYm7Zg9klz75k43I6YLGYMzorUEqJvzyYwJm2ejQ3VEHLQZGQEEAoEtdLnaU8HgLIw3XGY0n0
        DEyivaUWlkyWaymA44+UEj8+mMTyenaJPwiBsZlVjM2sZvxzM/05Pl8Yt/tG8d8/vnnghqp/pMDs4gaW
        N7Zzn/zbub8cB+v5zhNY3wzAu5XDjUrSW7VPza3h/OmmF5K4GX0UQ+r4sHOuX//Q9IElkulXtg310cQS
        hscWcvIyi6pqGBxbgJrI8duH6aRohas0d3vxaRJtTdX4h49u4BdvdOZcLIl4Ej0DU/qpwwdpUwyr48NO
        4i8Uih2b+a+aVHG7b/TAp94o6f35JufyUPknBN6+fgb/+PFNVLrLDi6BdAL1t+9fQYWrDFe729DSWJXb
        jT4VgYm5NUzMrh0oF0ABHBN2En+j0yvHa+07vUHJDz8dbGdiCeDJ5BICwRwn/6REbaUTF7tacKa9Eb/7
        zXW4yw82ErBYzPjwVxfQ1lyLlKbB5SzB29fPZFZevQ+SCRU9A5P6tm8UQOGym/i7N2b4gzn2uAPcezST
        9SGjQgChcAzD40t5ubrLZ1tQ6S5FStNw9tQJfPLhNZQ7HVlL4BdXTuHahfbdqZOmSXSfbkJXe0NuKxcV
        gcmFDYzNZL8fAwVwDNip+Fte8x3Ppa90Lfu3vSPpwzczFYDA9MI6Vj2+nPf+7vJSXDl/EjvzCiklus80
        4+9/fRVlpfaM34rsam/AX/2y+4Xe3m6z4J0bXXA4bDldGVXTo4BINJHVzIgCMDg777z3D83gMI+Myv2N
        CEzMrqWPvsqsqSbVFIZGF6Amc538A7pPn0Bdleu5RKeUEpfOtuDvPriKUodtfxKQErVV5fjt+5fhLLW/
        kDjVNIm2llpcOdea29+jIjCz6MHo9DJEFqMACsDgxBMqvu/PvuLPSGiahrv3xjPa7lpJv18wtbCR2+Sf
        BEpLbbja3QbFJF4Wz7hy/iT+9q/egKPkNRKQEiV2K/7mvcs4UVe5Z82DSVFw69rp3CQan0FNptA7MIVw
        JPOjzSkAA6MoAo/HF/F46pgl/vZCCHi3g/g+g0NGJYDHE0sIhnKf/DvT1oCm+spXrqNfu9CO375/GXa7
        dc+gVRQF7908i+7TTa8seJJSor7GlflLVq9tKAKzS16MTC5n/LEUgGFjRcAXiOiJv+QB676lzP3XASTw
        cGQBo/s4ZFQ/4CSK4YncJ/+sNguuXWh74VXol3Hj0il8/O4l2GyWF+9dSlw514K3r3ftMxEncONiexYv
        Wb2alJpC78MphCLxjAZKrAQ0KlKif3AaC6tbB+othBBwlztyugQlpYQvEIGa5Su/8XgS3/WNoLWpBuVl
        JXsWGgkBTC+sY83jz22Pmd4Etb2ldl9VdEIAb73RCTWlpU8CVvX/U5NobarGX6flsJ+CKSklXOUOvH39
        DP7wRX/Wz/AFFIG5FS8ejy+iprGNAjjOKEJgcX0LvYNTB6sllxKNdRX4p//2Fkod9pxs2imgD8u/6x3B
        3fvj2TfW5U30PZzEB7cu7PnPkskUBkcXkFJTOZ0CmcwmXLvQBrvNsu8yWiEEbl07g5Sm4au7w0gmVLjK
        9WKfqgpnRuW4Mr3r0uDoAp6ML+Xs3jRVQ+/gFN5z1adzAa+/JgrAYAjoWe8f7o3Dd8DtrhSTgltXT6Ox
        riKnRWhCAO+/dQ6Lq5uYXcjy+DEp0TMwha6ORrQ2Vr8wd1aEwJLHh+mFjZzP/U/UV+BMe0PGQjQpAu/c
        6IKmSdzpH8WHb19AR2tdxrX4EoDdri8Lzi56EIkmcpPgVAQWVrYwNLoAoGV/38KQM5gAFIHJuTUMjS3i
        QK1Ck+hsrcOlsy1Z1f6/6kvTJNzlDnz0ziWUldmzm8umzzG43TeK+EvebZcAHo8vIhSO5fxw06vnW+F0
        2DO+bAnAZFLwzo0u/M9P3sbV7rasR1WaJtGRq2VBqf++ISWsFhPWvb59n9ZEARgq+vW97u7eG0MsdoBe
        Qeq7/b77ZhccJVbkY7t+TZM41VqH9948u+euQq9vfQKPJ5bwaPz5l4WEEAiEIvpGp7lEStRUOtF9ujnr
        kJMSMJtNONVad+A3HJX0smBVRRbLglLuVhU6y+w409GAj9+/jP/1j+/jo3cu7/t3wimAoQSgF8uEIvED
        zgslLnc1o/Nk/YFeFd3H5eIXVzsxv+LVN+jMYqiuqinc6R9FR0stKlxlkFLqyb/5Dax7/TmvfbjU1YxK
        d+mB8yG52N9ApjdneetKJ/50e3B/QS/1qZ2r3IGWhip0ttWhrakW1ZVO2KxmKAKYXFMBRCmA44gvGH1a
        L57NQZTpV1t/df0MzCZTThrqq9pjic2K37x9EasePzybgawCdnl1Cz0PJvHX710GACSSKgZH59PJPyVn
        F1vuLMGVc60QEJAGqqq8frEdw+OLmF/2vvj80kFvtphQ6S5D24lqdJ6sQ+uJarhdpfooROpC0jSZcXuh
        AIxEupa8ubEKs4serHn9CEfi+jHfAvsLLiHw1pVTaKyryGvw76BJicbaCnz4qwv445f9SOynXHenJzMr
        cDtL0VRfifoaFzRNg8lkgj8QwXYgAqvNimRSff6Y8/0+hxd+JnC2oxH1Ne5DeS77/5VLuJwleOdGFz79
        U59e8yH1+7RZLaipcqK9uRadJ+vQVF+J8rISmExKuhxDHniEV7QCMGRVvQTqa1z4m/cuIxZLYtMXwuLq
        JmYWN7C4uoVNXxiJRHK3gbyst2hprMKblzrwdMEu/2hS4vLZFiwse3H3/sSLvZBMB70ArBYzqirK0NZU
        g1OtdWhurEJFuWN3tCLTL+j889/dgj8YwaYvBM9mEJ6tIDb9IQRCUUSiCX17st2RUvqPV3jBbrfg6vmT
        MJmUvE6Lsnp+msT5ziZ0d57A+MwqGmvd6GitQ2drHRpq3SgtsUEoImdBTwHsBobxymt3YsVqNeNEXQVO
        1Ffg+sV2hCNxrHl9mFvyYnbRgxWPD8FQDFpK270Ns8WMd9/sgqvcceiN3GQy4f1fnMfS2jZmdur2pS4p
        R4kV9TUudDTXoqO1Fo21FSgrtUN5tlE/0yub0keVV1c60dFaB0hATWmIJ5IIR+LwBcLwbofg2QrAsxXE
        lj+MYDiGaCyhlxg/9+sVgNQz7q1NNYYL/h2sVjM+fu8y3rt5FrVV5bDbrBBiZ/cmPD8KyiGcAhgYLT1U
        FkLAWVaCcmcJTp9sQCKpYjsQxtLqFmYWPVhY2cTGVgDnOhpx/nTzkTRyved24KN3LuL3n/VAAmiur8Sp
        1jq0Ndf8rFG/vifbafg7KIqAw26Fo8SG2upynE6LUk2lEIsnEQrHsO0Pw7sd1EcM20FsB8IIhWNIqhqu
        drfBZjUbVgBSSl16Fc7dkdBhzFQoAIMh9hiVPNsgzGYTaqtcqKt24cr5k4hE4/BsBVBeVgKrxXzox3Tv
        CkuTaG+pxf/45Few26yocpfptfbpJNVBG7XUH8Rzn2FSFJQ5bChz2NFQ6959Vkk1hWgsiWAoilAkhtbG
        6rz1ormUwGFfYfHmAAyUCPqZAfbfWNK3UOqwoay0drdnPdLLFwInT9SkpzLyUHpc/ZafF4PZZEJ5mRmu
        shJA6HIqklMEKYB9NRijxn8WGW4jBP6zGCXLvtujMvL3pGgrAY3aHwghiu7EK0IBHL4ADDoFKMbTrggF
        cLjBj8PJsGYnAFF8h14SCuCQDWDYEYBJ4ftZhALId/wbc0lIAOZC2PuPUADGNoA0VD34s5hMHAEQCiDP
        8S+R0jRDXpvCKQChAPKLJoGUQavCTJwCEAogfwikRwDPvERjnIsTMJlM4DIAoQDyaIADnXmf718IcwCE
        AsivATRNHuio6rxdmQDMFAChAPKLdkgvqWQuAAGLmQIgFEB+BZDS9ByA0X4ZQsBsMoFvrxAKII+ompa7
        I5lyiBAip0d4EUIBvIRUSksvAxor2y6EYCEQoQDyGmRpAWjSeCMAkyIOfNgEIRTAawygqiloKWmsAYDU
        y4AtZpNh31QkFEBBkEimDFgKLKEoSjoJSAgFkD8BqKohlwHNJoU5AEIB5BeBREI1ZCWg1WJiDoBQAPkm
        Fk8a8nVgs9mkjwCYBCAUQL6QiCWSxgsyqR+bZTIpLAMiFEA+Ay0aTRiy2M5utXBLMEIB5DX+pUQkloDx
        DCBhs5mhcD8AQgHkD01KRKJxQ15bic0KhfuCEwogf6RSGsLRBAy4GwhK7NasTgYihALYT4gJIKmmEInF
        jRj/KC2xcjMgQgHkM8riiSSisYQBL03AUWIDDUAogLyFPxCJJhCNJw0XaIoi4LBbwb0ACAWQRwMEQlEk
        EqrhOlqzyZQeARBCAeQNXyBsvM1ApF4G7LBbOQAgFEDe4kwCnq2QfjCAwQxgtZhhs1kY/4QCyBeqmsLG
        VsCQ1+awW2G3WcAhAKEA8oAQApFoHN6toPES7RIoddi4GQihAPInAMCzFYQvGNH/h8EM4Cy1czMQQgHk
        k7llD+LxpAGvTMBd7uB7AIQCyBfxhIqp+XVjTrEVXQCsASIUQF7iS2Dd48fi6rYBh/+ASVHgdjrYGgkF
        kA8kgJGpJYQjMUMmAG1WM1xOBxcACAWQa4QQ8AcjeDS+ZNArlHCUWFFWamf8Ewog5wIAMDy+iFWP35DD
        f0jAVVaCErvVsEeWEwrgeAa/ENgOhNH3cArSgMeB7xigqqIMVouZrZFQADkNLSnROzCJ5Q2fMXt/ABAC
        NZXlXAIkFEBOb0wRmJpbQ8/DKUNvs20yKairKmdLJBRAzm5KCGxuB/HFnSGEwjHj9v4SKLFbUVXh5AoA
        oQBygRACoUgMn337EPPLXuMGf9oA7nIHXM4SSBqAHAEFlXlShEAwHMN/fvMAQ2OLBg9+ABKoq3alVwDY
        GAkFkH3wKwKezQA+/+6hgdf8f4YAmuoqYDIphjyslFAAz7ZV/Q+DtVNFCKQ0DU8mlvHnu4+wtLpl/J4/
        jc1qQXNDJVshMbYANC0Fnz+IuLsMVqtZ37teAhLySIauAoBQBDRNYnl9Gz0Dkxh4Mqfv9ntc9tWXEpXu
        UtRWuTj8J0YWgEAyHsV/fPUAP7qsaG6oQnNDJeprXHCXl8Juszw9017qA4R8VLQJISCEvqIXiyWwtL6F
        odEFDE8swR+I6Fo4TodqSKClsQqlDhsrAImRBaATjMQQ8G1jen4DikmBo8SKivJS1FY5UV/jRm1VOSpd
        pXCWlcBus8BiNkFRlHRMPjN3kHvPInb/KZ5+j6ZJJJMqQpE4Njb9mF3yYmp+HSvr24jFkunhwPErolFM
        Cjpb6zn/J8dDAAKATJ9cq0mJUDiOUDiGxZVNQOgN2m61oMxhQ3lZCVzOEricDpSXlaCs1I5SuxU2mwVW
        ixlmswJFUXbPwZMANE1DKqUhkVARjScRisTgD0aw5QvDsxXEpi+EYDiGZFLVv0ER+tdxREpUuEtxsqma
        w39yPATwUiNA7PbYmiYRiSYQicax4Q2kw1r/e6EImBQFJpMCsykd/IqASP+9lPq0QdM0qKoGNZVCStMg
        tWeGCzs9vRDHf+MMCbQ316LCVcrhPzmmAnitFJ5GqZSAmtKgpjTEZToC9vqAZ4O7EIL9ZQ/dYkL36SYO
        /0mBCSATSRQrUqKhxo325lr2/uTIKbqTgY4egUtnm/UNQBj/hAIoItJr/xfPtPBZEAqgGLlytgXVlU4O
        /wkFUFSkl/6uXWzXKykJoQCKCYEbF9pRV+1i708ogKJCSjTUunDjUgd7f0IBFBsmswnv3OhClbuMvT+h
        AIoKTaK78wQun2tl8BMKoKiQ+pbfH/yyG3arhZt+EQqgmDBbzPjgVjdO1FdCY+9PKIAiQgI3L7Xjancb
        h/6EAigqNImu9nr8+tYFmM0mPg9CARRT8DfWV+BvP7iK8rIS9v6EAigapERVpROffHgNDTVuzvsJBVBM
        we92leJ3v7mG9pY6Bj85FvBI2hwFf4WrFL/7zXV0dZzgsJ9QAEWDJlFbXY5PPryO0+0NDH5CARQNUqKl
        qRp//+trOHmimsN+QgEUR+ADEMDFrmb89v0rqKksZ/ATCqA4gl/CbrPi1rVOvHfzHBwlNgY/oQAKP/D1
        P07UV+DXty6g+3QTFEXhnJ9QAAWPJuFw2HD9QhveTr/Wq0nJ4CcUQKEHvsVqRld7A96+fgbtLbVQFIVD
        fkIBFCxSP43IZrPgVGstbl4+hdNt9bDZLNA09vqkSAUgpQQ07enxXAUV9OnAFwIupwNn2urxRvdJtDXV
        7AY+T/AhRSoACbPFhmuXuhAPbWLNG4A/FEU8oQI7QXEcT+hN9/QQQEmJDU11bpw9dQJnOxpRU1kOs1lh
        4BMKAABMZiveunYOrVVAMBzH5nYIax4fVjZ8WPP6seUPIxyJIZFMPS8FGOhsP/n0oFGTWYGz1IHGWjc6
        WmrR0VqL+mo37HbLMweVMvAJBbATPZBSwqSY4HI64C53oKO1FpomkUiqCIVj2PKH4dkMYH0zAO9WENuB
        MILhGGLxJNSUlhaD/JkUciyInfn57gGkAsIkYLNY4Cy1o7qyDCdqK9DcUIWGWjfc5Q5YrfojYG9PKIBX
        IAAoAnoGPB0nigDsNjNKbE7UVpWjK10Lr6opROMJhMJx+IMRbPvD2PKH4AtE4A9FEY7EEY0lEE+oSKZS
        SKW03QSbfOqcvS8EO7MOAUURUBQFFrMJNosZJXYLyhx2uMsdqHSXorrCieoKJ9zlDpQ67LCYTRBC6D9L
        7+5374WQ446SYZ+6LwFICaz6Uq+Myxfj1AIIK6xOJ+rKgdomQNM0qGoKiWQK8XgS0XgC0Zj+FYsnEY0n
        kUiqSCZVqKoGVdN2O3VFETArAmazCRazCRaLGXarGXabFXa7BQ67Vf9vmwU2qxlmswkmRQGEPvjYjEp4
        oxKAylZCChYBPVb3u1gl6v7Ft69/quQ0+S92P+ulB2U8OxJ4yQ3iVd8jAcn9d0kRI+XTVNzr2PcUYHcK
        n5tL3OO/s/l+Qki2cEcgQigAQggFQAihAAghFAAhhAIghFAAhBAKgBBSOPx/8zB4PiQqA4wAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>